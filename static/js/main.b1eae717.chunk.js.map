{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","App","onSearchChange","event","setState","searchfield","target","value","state","fetch","then","response","json","users","this","filteredRobots","filter","robot","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAceA,EAZF,SAAC,GAA2B,IAAxBC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,GAC1B,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,KAC/C,gCACI,6BAAKF,IACL,4BAAIC,OAJZ,QCmBOK,EAnBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChB,OACG,8BAEEA,EAAOC,KAAI,SAACC,EAAMC,GAChB,OACC,cAAC,EAAD,CAEGR,GAAKK,EAAOG,GAAGR,GACfF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCILC,EAbG,SAAC,GAAuB,IAApBC,EAAmB,EAAnBA,aAClB,OACA,qBAAKT,UAAU,MAAf,SACE,uBACAA,UAAU,mCACVU,KAAK,SACLC,YAAY,gBACZC,SAAWH,OCCFI,EARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAAEC,SAAS,SAAUC,OAAQ,iBAAkBC,OAAQ,SAAnE,SACKJ,EAAMK,YC2CJC,G,wDAvCX,aAAe,IAAD,8BACV,gBASJC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAR1C,EAAKC,MAAQ,CACTvB,OAAQ,GACRoB,YAAa,IALP,E,qDAcd,WAAqB,IAAD,OAChBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAG,EAAKT,SAAU,CAAEnB,OAAQ4B,S,oBAG3C,WACI,MAAgCC,KAAKN,MAA7BvB,EAAR,EAAQA,OAAQoB,EAAhB,EAAgBA,YACVU,EAAiB9B,EAAO+B,QAAO,SAAAC,GACjC,OAAOA,EAAMvC,KAAKwC,cAAcC,SAASd,EAAYa,kBAEzD,OAAQjC,EAAOmC,OAGX,sBAAKvC,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWS,aAAcwB,KAAKZ,iBAC9B,cAAC,EAAD,UACA,cAAC,EAAD,CAAUjB,OAAQ8B,SANtB,6C,GA3BMM,cCIHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b1eae717.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ( { name, email, id } ) => {\n    return (\n        <div className='tc bg-light-green dib br3 pa3 ma3 grow bw2 shadow-5'>\n            <img alt='robots' src={`https://robohash.org/${id}`} />\n            <div>\n                <h2>{name}</h2>\n                <p>{email}</p>\n            </div>s\n        </div>\n    );\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\n// Function for user details in the cards\nconst CardList = ({ robots }) => {\n    return (\n       <div>\n        {\n         robots.map((user, i) => {\n           return (\n            <Card \n               key={i}\n               id ={robots[i].id}\n               name={robots[i].name}\n               email={robots[i].email} \n               />\n            );\n         })\n       }\n      </div>        \n    );\n}\n\nexport default CardList;\n","import React from 'react';\n\nconst SearchBox = ( { searchChange }) => {\n    return (\n    <div className='pa2'>\n      <input\n      className='pa3 ba b--green bg-lightest-blue'\n      type='search'\n      placeholder='search robots'\n      onChange ={searchChange}\n      />\n      </div>\n    );\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n    return (\n        <div style={{ overflow:'scroll', border: '5px solid pink', height: '800px'}}>\n            {props.children}\n        </div>\n    );\n};\n\nexport default Scroll;","// Files needed for the app to run\n// { Component } is shorthand so the whole doc can use it\nimport React, { Component } from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport './App.css';\n\nclass App extends Component {\n    constructor() {\n        super()\n        // What we want our state to have\n        this.state = {\n            robots: [],\n            searchfield: ''\n        }\n    }\n// this is a function we created using the arrow function which allows us to \n// access the CardList correctly\n    onSearchChange = (event) => {\n        this.setState({ searchfield: event.target.value })\n    }\n\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/users')\n        .then(response=> response.json())\n        .then(users=> this.setState( { robots: users } ));\n    }\n\n    render() {\n        const { robots, searchfield } = this.state;\n        const filteredRobots = robots.filter(robot =>{\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase())\n        })\n        return !robots.length ?\n            <h1>Loading</h1> :\n        (\n            <div className='tc'>\n                <h1 className='f1'>RoboFriends</h1>\n                <SearchBox searchChange={this.onSearchChange} />\n                <Scroll>\n                <CardList robots={filteredRobots} />\n                </Scroll>\n        </div>\n        );\n    }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>, \n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}